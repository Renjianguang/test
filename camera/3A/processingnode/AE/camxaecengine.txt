1.Create():创建aecengine
    1.NEW CAECEngine():创建aecEngine对象
        1.m_AECLastState 初始化上一次AEC的收敛状态
        2.初始化算法操作模式
    2.Initialize：初始化
        1.(*pfnCreate)(&createParamList, &m_pAECAlgorithm):创建算法实例
        2.初始哈AEC HAL参数
        3.初始化预闪的AF,AWB的最大等待帧数
2.HandleCommand：处理命令
    1.执行传入的命令
    2.AECStateMachine，如果执行成功，更改AE状态机状态
        1.修改当前状态
        2.如果当前状态是从收敛变为收敛完成，则计算收敛时间
        3.如果当前的状态是开始收敛，则保存当前开始收敛的时间
    3.如果AE状态机是刚执行完处理命令，则要更新输出数据
        1.IsPreflashComplete：判断当前预闪是否完成
        2.如果预闪完成，我们要获取主闪的拍照gain值并恢复算法到正常运行
          RestoreStreaming(pOutput)
                1.将算法恢复回预览模式
                2.从算法中获取最后的预览gain,此gain将用于预闪关闭后下一帧的gain
                StartStreaming：重新开始预览
        3.UpdateAEEngineOutputResults(pOutput):更新AE输出结果
            1.UpdateAEStateBasedOnAlgo：更新AE状态，当AE在收敛状态时，如果算法设置更新了状态，则更改AE状态为收敛完成
            2.重新设置闪光灯触发标志为未触发
            3.设置AE引擎状态到输出
        4.如果预闪完成，恢复AE状态，包括当前AE状态，预闪状态，预闪触发标志，拍照指示标志
3.命令执行的流程
    1.StartDriver：
        1.OverrideAlgoSetting：设置所有的setting给算法
             m_pAECAlgorithm->AECSetParam(m_pAECAlgorithm, &setParamList)：将一些控制setting设置给算法
        2.AE状态不变:m_AECState:Inactive m_AECLastState:Inactive
    2.SetChromatix：设置渲染参数
        1.SetSingleParamToAlgorithm：设置参数给算法
            m_pAECAlgorithm->AECSetParam(m_pAECAlgorithm, &setParamList)：将一些tunning数据设置给算法
        2.AE状态不变:m_AECState:Inactive m_AECLastState:Inactive
    3.SetPipelineDelay:设置pipeline延迟
        1.SetSingleParamToAlgorithm：设置参数给算法
            m_pAECAlgorithm->AECSetParam(m_pAECAlgorithm, &setParamList)：将pipeline delay数据设置给算法
        2.AE状态不变:m_AECState:Inactive m_AECLastState:Inactive
    4.SetDCCalibrationData:设置双摄校准数据
        1.SetSingleParamToAlgorithm：设置参数给算法
            m_pAECAlgorithm->AECSetParam(m_pAECAlgorithm, &setParamList)：将校准数据设置给算法
        2.AE状态不变:m_AECState:Inactive m_AECLastState:Inactive
    5.ProcessCropWindow：处理裁剪窗口
        1.SetSingleParamToAlgorithm：设置参数给算法
            m_pAECAlgorithm->AECSetParam(m_pAECAlgorithm, &setParamList：将裁剪区域设置给算法
        2.AE状态不变:m_AECState:Inactive m_AECLastState:Inactive
    6.ProcessHardwareInfo：处理硬件硬件信息
        1.SetSingleParamToAlgorithm：设置参数给算法
            m_pAECAlgorithm->AECSetParam(m_pAECAlgorithm, &setParamList：将sensor信息设置给算法
        2.AE状态不变:m_AECState:Inactive m_AECLastState:Inactive
    7.GetPubVendorTagFromAlgo：从算法中获取公布的供应商tag
        1.GetParamForPubVendorTag：从公布的tag中获取参数
        2.GetParamFromAlgorithm：从算法中获取参数
        3.m_pAECAlgorithm->AECGetParam(m_pAECAlgorithm, &getParam)：从算法中获取参数
        4.AE状态不变:m_AECState:Inactive m_AECLastState:Inactive
    8.StartStreaming：启流
        1.SetOperationModeToAlgo：设置操作模式给算法
            SetSingleParamToAlgorithm：设置参数给算法
                m_pAECAlgorithm->AECSetParam(m_pAECAlgorithm, &setParamList)：将操作模式设置给算法
        2.SetSingleParamToAlgorithm：设置参数给算法
            m_pAECAlgorithm->AECSetParam(m_pAECAlgorithm, &setParamList)：将感光度信息设置给算法
        3.GetAlgoParamForFrameControlType：为帧控制类型获取算法参数
            a.GetParamFromAlgorithm
                m_pAECAlgorithm->AECGetParam(m_pAECAlgorithm, &getParam):获取参数
            b.CopyExposureSetToExposureData:将算法的曝光数据复制到AE引擎曝光数据中
            c.GetParamFromAlgorithm:查询BG状态配置
        4.AE状态由Inactive变为converging:m_AECState:Converging m_AECLastState:Converging
        5.记录开始收敛的时间
    9.SetChromatix：设置渲染参数
        1.SetSingleParamToAlgorithm：设置参数给算法
            m_pAECAlgorithm->AECSetParam(m_pAECAlgorithm, &setParamList)：将一些tunning数据设置给算法
        2.AECStateMachineConvergedAndConverging:不改变AE状态
        3.AE状态不变:m_AECState:converging m_AECLastState:converging
    10.GetLEDCalibrationConfig:获取LED校准数据
        1.SetSingleParamToAlgorithm：设置闪光灯检测模式到算法
        2.GetParamFromAlgorithm：如果校准数据模式，获取校准数据的配置信息
        3.AE状态不变:m_AECState:converging m_AECLastState:converging
    11.LoadLEDCalibrationData：加载LED校准数据
        1.SetSingleParamToAlgorithm：设置校准数据给算法
        2.AE状态不变:m_AECState:converging m_AECLastState:converging
    12.SetPerFrameControlParam：设置每帧的控制参数
        1.m_pAECAlgorithm->AECSetParam(m_pAECAlgorithm, &setParamList)：获取各个参数并设置到算法中
        2.AECStateMachineConvergedAndConverging:设置AE状态机状态：
            获取当前的算法模式：
                a.如果是手动模式：
                    1.设置AE状态机的flash状态机的触发器(AE/LEDAF)
                    2.设置AE状态机为flash模式
                    3.设置AE状态机的预闪状态m_AECPreFlashState为预闪开始状态
                b.如果不是手动模式：
                    1.IsHalPreFlashSettingEnabled：检查HAL层是否有设置将预闪开启
                        此方法里，主要通过HAL层的AEmode值来判断(包括 always on/AUTO/off&&manual/ON)
                    2.设置AE状态机的flash状态机的触发器(AE/LEDAF)
                    3.设置AE状态机为flash模式
                    4.设置AE状态机的预闪状态m_AECPreFlashState为预闪开始状态
        3.AE状态改变:m_AECState:flash m_AECLastState:flash
    13.SetNodesUpdate:设置来自内部其他组建的参数更新
        1.SetSingleParamToAlgorithm：此处主要是将AWB组件的参数更新到算法中
        2.AECStateMachineFlash:根据预闪状态来处理
            AECStateMachineFlashStart：预闪开始，AE状态不变
        AE状态不变:m_AECState:flash m_AECLastState:flash
    14.ProcessCropWindow：设置stat作用区域
        1.SetSingleParamToAlgorithm：将stat区域设置给算法
        2.AE状态不变:m_AECState:flash m_AECLastState:flash
    15.ProcessStats：处理stats数据（核心）
        1.判断capture请求(如果是持续捕获或手动捕获则为真)
            a.如果成立：
                1.如果是flash拍照,获取各项算法输出参数
                2.如果是普通拍照，ProcessStatsAlgo：处理
                    a.配置算法处理参数
                    b.m_pAECAlgorithm->AECProcess:算法处理
                    c.SetOperationModeToAlgo,设置预闪操作模式给算法
                    d.GetAlgoParamForMultiCamera:获取多摄的算法参数，m_pAECAlgorithm->AECGetParam
                3.在zsl模式时，snapshot的AE数据来自预览，在HDR模式时，snapshot的AE数据来自snapshot
                    如果需要从snapshot取AE数据则:
                       ProcessStatsCaptureRequest:处理统计捕获请求数据,m_pAECAlgorithm->AECGetParam 获取数据
            b.如果不成立:
                1.判断如果主闪后不跳帧:
                2.如果主闪后跳帧，则意味着现在还在闪光完成前的状态，此时我们不做处理，还是用之前相同的数据
